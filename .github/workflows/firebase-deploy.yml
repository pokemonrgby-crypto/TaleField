# .github/workflows/firebase-deploy.yml

name: Deploy to Firebase (Hosting + Functions)

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Validate Firebase secrets (fail if any is missing)
        run: |
          check() { [ -n "$1" ] || { echo "::error::Missing secret $2"; exit 1; }; }
          check "${{ secrets.FB_API_KEY }}" FB_API_KEY
          check "${{ secrets.FB_AUTH_DOMAIN }}" FB_AUTH_DOMAIN
          check "${{ secrets.FB_PROJECT_ID }}" FB_PROJECT_ID
          check "${{ secrets.FB_STORAGE_BUCKET }}" FB_STORAGE_BUCKET
          check "${{ secrets.FB_MESSAGING_SENDER_ID }}" FB_MESSAGING_SENDER_ID
          check "${{ secrets.FB_APP_ID }}" FB_APP_ID
          check "${{ secrets.GCP_SA_KEY }}" GCP_SA_KEY
          check "${{ secrets.FIREBASE_PROJECT_ID }}" FIREBASE_PROJECT_ID
          check "${{ secrets.GEMINI_API_KEY }}" GEMINI_API_KEY

      - name: Create firebase-config.js from secrets
        run: |
          mkdir -p public
          cat > public/firebase-config.js <<EOF
          window.__FBCONFIG__ = {
            apiKey: "${{ secrets.FB_API_KEY }}",
            authDomain: "${{ secrets.FB_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FB_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FB_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FB_APP_ID }}"
          };
          EOF

      - name: Check if functions directory exists
        id: check_functions
        run: |
          if [ -d "functions" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Functions dependencies
        if: steps.check_functions.outputs.exists == 'true'
        run: cd functions && npm install

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only ${{ steps.check_functions.outputs.exists == 'true' && 'hosting,functions' || 'hosting' }} --project ${{ secrets.FIREBASE_PROJECT_ID }} --force
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
